name: Java CI with Gradle

on:
  push:
    branches: [ "main" ] # master 브랜치를 사용하시면 "master"로 변경하세요.
  pull_request:
    branches: [ "main" ] # master 브랜치를 사용하시면 "master"로 변경하세요.

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # (선택) Gradle 캐싱으로 빌드 속도 향상
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # gradlew 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        working-directory: Backend # working-directory 추가

      # Gradle 빌드
      - name: Build with Gradle Wrapper
        run: ./gradlew build -x test
        working-directory: Backend # working-directory 추가

      # ---ここからデプロイメントステップです---

      # 1. 빌드된 JAR 파일을 EC2 서버로 전송
      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          source: "Backend/build/libs/*.jar" # 빌드된 JAR 파일 경로
          target: "/home/ubuntu/app" # EC2 서버에 파일이 저장될 경로
          strip_components: 3 # 'Backend/build/libs/' 경로 제거하고 파일명만 남김

      # 2. deploy.sh 스크립트를 EC2 서버로 전송
      - name: Copy deploy script to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          source: "deploy.sh" # Repository 루트에 있는 deploy.sh
          target: "/home/ubuntu/app"

      # 3. EC2 서버에서 deploy.sh 스크립트 실행
      - name: Execute deploy script on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            cd /home/ubuntu/app
            chmod +x ./deploy.sh
            ./deploy.sh
