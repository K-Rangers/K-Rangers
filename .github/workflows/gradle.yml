name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        working-directory: Backend

      # [수정] clean 태스크를 추가하여 이전 빌드 캐시를 삭제하고, bootJar를 직접 실행합니다.
      - name: Build with Gradle Wrapper (Clean + BootJar)
        run: ./gradlew clean bootJar --stacktrace
        working-directory: Backend

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          # [수정] 파일 경로를 위에서 고정한 이름으로 명시합니다. 와일드카드(*) 대신 사용합니다.
          source: "Backend/build/libs/k-rangers-backend.jar"
          target: "/home/ubuntu/app"
          strip_components: 3 # 'Backend/build/libs/' 경로 제거는 그대로 유지

      # deploy.sh를 복사하고 실행하는 부분은 이전과 동일합니다.
      - name: Copy deploy script to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          source: "deploy.sh"
          target: "/home/ubuntu/app"

      - name: Execute deploy script on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            cd /home/ubuntu/app
            chmod +x ./deploy.sh
            ./deploy.sh

