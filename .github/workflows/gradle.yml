name: Java CI/CD with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Î†àÌè¨ÏßÄÌÜ†Î¶¨ Ï≤¥ÌÅ¨ÏïÑÏõÉ
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ JDK 21 ÏÑ§Ï†ï
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3Ô∏è‚É£ Ïù¥Ï†Ñ ÎπåÎìú ÌååÏùº ÏôÑÏ†Ñ ÏÇ≠Ï†ú
      - name: Clean old build files
        run: |
          rm -rf Backend/build
          echo "üßπ Old build files removed."

      # 4Ô∏è‚É£ gradlew Ïã§ÌñâÍ∂åÌïú Î∂ÄÏó¨
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        working-directory: Backend

      # 5Ô∏è‚É£ Gradle ÌÅ¥Î¶∞ ÎπåÎìú (ÌÖåÏä§Ìä∏ Ï†úÏô∏)
      - name: Build with Gradle Wrapper
        run: ./gradlew clean build -x test
        working-directory: Backend

      # 6Ô∏è‚É£ Ïã§Ìñâ Í∞ÄÎä•Ìïú JAR ÌååÏùº Ï∞æÍ∏∞ (ÎîîÎ≤ÑÍπÖ Ìè¨Ìï®)
      - name: Find Executable JAR
        id: find_jar
        run: |
          echo "Searching for jar in: $GITHUB_WORKSPACE/Backend/build/libs"
          ls -al $GITHUB_WORKSPACE/Backend/build/libs || true
          JAR_PATH=$(find $GITHUB_WORKSPACE/Backend/build/libs -name "*.jar" ! -name "*-plain.jar" | head -n 1)
          if [ -z "$JAR_PATH" ]; then
            echo "::error::No executable JAR file found after build!"
            exit 1
          fi
          echo "‚úÖ Found JAR file: $JAR_PATH"
          echo "jar_path=$JAR_PATH" >> $GITHUB_OUTPUT

      # 7Ô∏è‚É£ EC2 ÏÑúÎ≤ÑÎ°ú JAR Î≥µÏÇ¨
      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          source: ${{ steps.find_jar.outputs.jar_path }}
          target: "/home/ubuntu/cicd"

      # 8Ô∏è‚É£ Î∞∞Ìè¨ Ïä§ÌÅ¨Î¶ΩÌä∏ Î≥µÏÇ¨
      - name: Copy deploy script to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          source: "deploy.sh"
          target: "/home/ubuntu/cicd"

      # 9Ô∏è‚É£ EC2ÏóêÏÑú Î∞∞Ìè¨ Ïä§ÌÅ¨Î¶ΩÌä∏ Ïã§Ìñâ
      - name: Execute deploy script on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            cd /home/ubuntu/cicd
            chmod +x ./deploy.sh
            ./deploy.sh
            echo "üöÄ Deployment completed successfully!"
