name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        # Backend 디렉터리 안에서 실행
        working-directory: Backend

      - name: Build with Gradle Wrapper
        run: ./gradlew build -x test
        # Backend 디렉터리 안에서 실행
        working-directory: Backend

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          # K-Rangers/ 없이 Backend 부터 시작하는 것이 올바른 경로입니다.
          source: "Backend/build/libs/*.jar"
          target: "/home/ubuntu/app"
          # 'Backend/build/libs/' (3개) 경로를 제거합니다.
          strip_components: 3

      - name: Copy deploy script to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          # deploy.sh는 저장소 루트에 있다고 가정합니다.
          source: "deploy.sh"
          target: "/home/ubuntu/app"

      - name: Execute deploy script on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            cd /home/ubuntu/app
            chmod +x ./deploy.sh
            ./deploy.sh
